{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nconst apiMap = require('./apiMap');\nconst {endPoints, serviceVersions} = require('./defaults');\nconst normalizeParameters = require('./normalizeParameters');\nconst request = require('request-promise');\nconst qs = require('qs');\nconst _ = require('lodash');\n\nclass Ebay {\n  constructor({devKey, responseFormat, serviceVersion, sandbox}) {\n    if (!devKey) throw new Error('devKey not provided');\n    if (responseFormat && !responseFormat.match(/json|xml/i)) throw new Error('Response format must be xml or json');\n\n    this._endPoints = endPoints[sandbox ? 'sandbox' : 'production'];\n\n    // Generate methods for all API\n    const api = _.reduce(apiMap, (prev, cur) => { return prev.concat(_.keys(cur)); }, []);\n\n    api.forEach(method => {\n      let service = _.findKey(apiMap, method);\n      this[method] = new Api(method, this._endPoints[service], {devKey, responseFormat, serviceVersion});\n    });\n  }\n}\n\n// Class used for all generated api methods\nclass Api {\n  constructor(api, endpoint, {devKey, serviceVersion, responseFormat}) {\n    this._api = api;\n    this._service = _.findKey(apiMap, this._api);\n    this._field = normalizeParameters[this._service];\n    this._endPoint = endpoint;\n    this._credentials = {\n      [this._field.devKey]: devKey,\n      [this._field.serviceVersion]: _.get(serviceVersion, this._service) || serviceVersions[this._service],\n      [this._field.responseFormat]: responseFormat || 'JSON'\n    };\n  }\n\n  call(options) {\n    // using modified qs here to encode url because of ebay's unconventional api...\n    const operation = {[this._field.operation]: this._api};\n    const query = normalizeQuery(options, this._service + '.' + this._api);\n    const uri = this._endPoint + '?' + qs.stringify(_.extend(operation, this._credentials, query), {delimiter: '&'});\n\n    return request(uri);\n  }\n}\n\n// Validates query and appends @ to detected attributes fields\nfunction normalizeQuery(query, path) {\n  if(!_.isPlainObject(query)) throw new TypeError('Query must be an object literal');\n\n  return _.transform(query, (accumulator, value, key) => {\n    const list = _.get(apiMap, path);\n    const listValue = list[key] || list;\n\n    // Validations\n    if (!value) throw new Error(key + ' argument is empty');\n    if (!list[key]) throw new Error('Invalid argument: ' + key);\n\n    // Add @ to attributes\n    if (listValue === 'attribute') accumulator['@' + key] = value;\n    if (listValue === 'value') accumulator[key] = value;\n\n    // Recursively inspect all elements in object\n    if (_.isPlainObject(value) && _.isPlainObject(listValue)){\n      return accumulator[key] = normalizeQuery(value, path + '.' + key);\n    }\n  });\n}\n\nmodule.exports = {\n  Ebay,\n  Api,\n  normalizeQuery\n};\n"],"sourceRoot":"/source/"}